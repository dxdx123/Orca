//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public NetworkMoveComponent networkMove { get { return (NetworkMoveComponent)GetComponent(InputComponentsLookup.NetworkMove); } }
    public bool hasNetworkMove { get { return HasComponent(InputComponentsLookup.NetworkMove); } }

    public void AddNetworkMove(float newX, float newY) {
        var index = InputComponentsLookup.NetworkMove;
        var component = (NetworkMoveComponent)CreateComponent(index, typeof(NetworkMoveComponent));
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplaceNetworkMove(float newX, float newY) {
        var index = InputComponentsLookup.NetworkMove;
        var component = (NetworkMoveComponent)CreateComponent(index, typeof(NetworkMoveComponent));
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveNetworkMove() {
        RemoveComponent(InputComponentsLookup.NetworkMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherNetworkMove;

    public static Entitas.IMatcher<InputEntity> NetworkMove {
        get {
            if (_matcherNetworkMove == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.NetworkMove);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherNetworkMove = matcher;
            }

            return _matcherNetworkMove;
        }
    }
}
