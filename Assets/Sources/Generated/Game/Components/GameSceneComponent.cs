//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity sceneEntity { get { return GetGroup(GameMatcher.Scene).GetSingleEntity(); } }
    public SceneComponent scene { get { return sceneEntity.scene; } }
    public bool hasScene { get { return sceneEntity != null; } }

    public GameEntity SetScene(string newSceneName) {
        if (hasScene) {
            throw new Entitas.EntitasException("Could not set Scene!\n" + this + " already has an entity with SceneComponent!",
                "You should check if the context already has a sceneEntity before setting it or use context.ReplaceScene().");
        }
        var entity = CreateEntity();
        entity.AddScene(newSceneName);
        return entity;
    }

    public void ReplaceScene(string newSceneName) {
        var entity = sceneEntity;
        if (entity == null) {
            entity = SetScene(newSceneName);
        } else {
            entity.ReplaceScene(newSceneName);
        }
    }

    public void RemoveScene() {
        sceneEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SceneComponent scene { get { return (SceneComponent)GetComponent(GameComponentsLookup.Scene); } }
    public bool hasScene { get { return HasComponent(GameComponentsLookup.Scene); } }

    public void AddScene(string newSceneName) {
        var index = GameComponentsLookup.Scene;
        var component = (SceneComponent)CreateComponent(index, typeof(SceneComponent));
        component.sceneName = newSceneName;
        AddComponent(index, component);
    }

    public void ReplaceScene(string newSceneName) {
        var index = GameComponentsLookup.Scene;
        var component = (SceneComponent)CreateComponent(index, typeof(SceneComponent));
        component.sceneName = newSceneName;
        ReplaceComponent(index, component);
    }

    public void RemoveScene() {
        RemoveComponent(GameComponentsLookup.Scene);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScene;

    public static Entitas.IMatcher<GameEntity> Scene {
        get {
            if (_matcherScene == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Scene);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScene = matcher;
            }

            return _matcherScene;
        }
    }
}
